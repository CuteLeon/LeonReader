1. 项目启动后不允许修改下载目录，COM.ConfigHelper 为单实例密封对象，对象内下载目录字段初始化后禁止修改；
2. 项目关闭后允许随下载目录一同迁移，数据库文件路径字段只记录相对路径和文件名，禁止记录绝对路径；
	数据库内容表映射 文章文件名称 和 下载目录 两个字段由实现ASDE自由设置，但注意只是相对路径，绝对路径以配置助手的下载目录为前缀，防止第三方ASDE开发者瞎几把下载；
3. 文章实体对象创建后，文章ID、文章标题、文章文件路径、下载路径不可修改；
4. 实体类的无参构造函数访问权限必须大于等于protected，供 O/RM 框架使用；
5. 引用 Model 项目可以顺利编译通过和调试，但是 using 和 调用 Model 层的代码一直标红的解决方案：
	在 Model 项目属性> 生成> 输出> 勾选"为COM互操作性注册"，保存并编译，然后重新取消勾选，保存并编译；
6. LogUtils 日志等级说明和使用指引：
		DEBUG = 0：[仅开发或测试使用]
			调试信息，开发时事无巨细都可以在这里输出；
        INFO = 1：[发布时的最低等级]
			信息，能引起用户注意的信息的日志等级；
        WARN = 2,
			警告信息，遇到问题但问题不会影响系统继续运行，可能引起开发人员的注意并修复；
        ERROR = 3,
			错误信息，遇到严重问题，必须由开发人员排查并修复；
        FATAL = 4
			致命问题，银河系和仙女座星系碰撞并形成新星系；
7. Processer 里使用 BackgroundWorker 实现异步执行；
	1. 对外公开 ProcessStarted、ProcessReport、ProcessCompleted 事件，用于广播 [处理开始]、[处理进度] 和 [处理完成] 事件；
	2. 外部通过 Process()、Cancle() 开始或取消处理；
	3. 处理开始时：先通知用户再运行子类实现的业务逻辑（允许用户此时立即取消处理）；
	    处理完成时：先运行子类覆写的业务逻辑再通知用户；
	4. 用户可以在接收处理开始事件内通过 Processer.Cancel() 或 e.Cancel = true; 在子类实现的逻辑执行之前即取消处理；
	5. 子类需要在覆写的 OnProcessStarted() 方法里适当的地方增加：
			if (ProcessWorker.CancellationPending) 
			{
				e.Cancel = true;
				break; 
			}
		以允许用户取消处理；其中需要手动 e.Cancel = true; 否则完成事件无法得知是不是用户手动取消了处理，也可以悄悄用这个来推锅啦；
	6. OnProcessStarted() 为抽象方法(abstract)，子类必须实现以设计核心的业务逻辑；
		OnProcessCompleted() 为虚方法(virtual)，子类不需要时可以不覆写，但Processer抽象类也不实现业务代码；
	7. ASDE可以通过：
			OnProcessReport(value, object);
			ProcessWorker.ReportProgress(value, object);
		两种方式向外部报告参数；
	8. [报告进度] 和 [处理完成] 事件是在主线程执行的，[处理开始] 事件为了操作 DoWorkEventArgs 是在异步线程执行的：
		如果需要操作控件，需要回到控件所在的线程：
			button1.Invoke(new Action(()=> { button1.Text = "任务开始咯"; }));
	9. 分析器、下载器、导出器不同于扫描器，前三者会单一对应一篇文章，所以继承自 SingleArticleProcesser，由 SingleArticleProcesser 在 Process() 方法中使用文章链接匹配到对应的文章实体，
		并将文章实体传入子类实现的 OnProcessStarted() 方法的 e.Argument 处，可通过模式匹配检查空引用和定义变量：
			if (!(e.Argument is Article article)) throw new Exception($"未找到链接关联的文章实体");
		子类可以覆写 SingleArticleProcesser.PreConfigProcess(Article) 方法以在处理正式开始前有权利根据文章实体配置处理相关参数，例如设置工作目录；
8. Card 控件使用 LeonDirectUI 框架实现，并设计三种显示模式。具体框架使用相关问题访问：https://github.com/CuteLeon/LeonDirectUI；
9. UI 与 DAL 之间增加 Manager 层，UI 层可直接访问 DAL 层的数据模型，但是不要直接调用 DBContext 对象，具体业务逻辑由 Manager 封装；
10. 新增的 SADE 库的动态链接库放置于程序根目录即可，文件名称以 "ASDE.DLL" 结尾，可忽略大小写，否则程序无法识别此 SADE 组件；